---
resources:
    # already fetched into git by cronjob at storage
    #
    - name: tpen-data
      type: git
      source:
        uri: {{tpen-data-uri}}
        branch: {{tpen-data-branch}}
        paths: [transcription]
        private_key: {{DHUniWienMU-priv-key}}

    - name: moe-data
      type: git
      source:
        uri: {{moe-data-uri}}
        branch: {{moe-data-branch}}
        paths: [ci/resources]

    #- name: version
    #  type: semver
    #  source:
    #    driver: git
    #    uri: {{version-uri}}
    #    branch: {{version-branch}}
    #    file: {{version-file}}
    #    initial_version: "0.0.0"
    #    private_key: {{DHUniWienMU-priv-key}}

    - name: ssh-keys
      type: git
      source:
        uri: {{ssh-keys-uri}}
        private_key: {{DHUniWienMU-priv-key}}


jobs:

    - name: tpen2tei
      plan:
        - aggregate:
          - get: tpen-data
            trigger: true
          - get: ssh-keys
          - get: moe-data

        - task: task-tpen2tei

          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: {{tools-image}}
                insecure_registries: [ {{insecure-registries}} ]

            inputs:
              - name: tpen-data
              - name: moe-data
              - name: ssh-keys
            outputs:
              - name: tei-xml
              - name: tpen-data-bumped

            run:
              path: sh
              args:
                - -exc
                - |
                  chmod 600 ssh-keys/github/DHUniWienMU-id_rsa
                  export GIT_SSH_COMMAND="ssh -o StrictHostKeyChecking=no -i ssh-keys/github/DHUniWienMU-id_rsa"

                  git clone {{tpen-data-uri}} tpen-data-bumped

                  cd tpen-data-bumped

                  ### use merged files
                  [ -d transcription/merged ] || mkdir transcription/merged/
                  python3 ../moe-data/ci/resources/merge-json.py transcription/ transcription/merged

                  ### create TEI-XML
                  [ -d transcription/tei-xml ] || mkdir transcription/tei-xml/
                  python3 ../moe-data/ci/resources/json2xml.py transcription/merged transcription/tei-xml/

                  # ### use files as they come from T-PEN
                  # [ -d transcription/tei-xml ] || mkdir transcription/tei-xml/
                  # python3 ../moe-data/ci/resources/json2xml.py transcription/ transcription/tei-xml/

                  git config --global user.email "DHUniWienMU@foo.bar"
                  git config --global user.name "DHUniWienMU"

                  cd transcription/tei-xml/
                  git add *xml

                  GIT_STATUS=`git status`

                  if echo $GIT_STATUS | grep -q "Changes to be committed:" -;
                  then
                      git commit -m "tpen2tei" *xml
                  fi

        - put: tpen-data
          params: {repository: tpen-data-bumped}

    - name: validate-tei-xml
      plan:
        - get: tpen-data
          trigger: true
          passed: [tpen2tei]

        - task: task-validate-tei-xml

          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: {{tools-image}}
                insecure_registries: [ {{insecure-registries}} ]

            inputs:
              - name: tpen-data

            run:
              path: sh
              args:
                - -exc
                - |
                  SAVEIFS=$IFS
                  IFS=$(echo -en "\n\b")

                  # for now: don't care if a linter fails instead make sure
                  # all files are checked by swallowing the return value
                  #
                  sh -c '
                      for FILE in tpen-data/transcription/tei-xml/*xml
                      do
                          # xmlwf "$FILE" && \
                          xmllint --noout --relaxng "{{relaxng_schema}}" "$FILE"
                      done
                  '

                  IFS=$SAVEIFS
                  exit 0

    - name: collate
      plan:
        - aggregate:
          - get: tpen-data
            trigger: true
            passed: [validate-tei-xml]
          - get: moe-data

        - task: task-collate

          config:
            platform: linux
            image_resource:
              type: docker-image
              source:
                repository: {{tools-image}}
                insecure_registries: [ {{insecure-registries}} ]

            inputs:
              - name: tpen-data
              - name: moe-data
            outputs:
              - name: collatex
              - name: collatex-out
              - name: collatex-out-pretty

            run:
              path: sh
              args:
                - -exc
                - |
                  echo "rearrange data for collatex ..."
                  python3 moe-data/ci/resources/teixml2collatex.py tpen-data/transcription/tei-xml/ collatex

                  SAVEIFS=$IFS
                  IFS=$(echo -en "\n\b")

                  echo "running collatex ..."
                  sh -c '
                      for FILE in milestone-*.json
                      do
                          IN_FILE=collatex/$FILE
                          OUT_FILE=collatex-out/$FILE
                          COMMAND="java -jar /root/collatex.jar --format json $IN_FILE --output $OUT_FILE"
                          echo `date -R` $COMMAND
                          $COMMAND
                      done
                      echo `date -R` done
                  '

                  echo "pretty print collatex's output ..."
                  python3 moe-data/ci/resources/beautify-json.py collatex-out/ collatex-out-pretty/

                  date -R

                  IFS=$SAVEIFS
                  exit 0


        #- task: upload

        #  config:
        #    platform: linux
        #    image_resource:
        #      type: docker-image
        #      source:
        #        repository: {{tools-image}}
        #        insecure_registries: [ {{insecure-registries}} ]

        #    inputs:
        #      - name: collated

        #    run:
        #      path: echo
        #      dir: data
        #      args: ["feed stemmarest"]

        #- put: version
        #  params:
        #    bump: patch
